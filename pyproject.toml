[tool.poetry]
name = "mmdb-server"
version = "2.1.1"
description = "Fast API server to lookup IP addresses for their geographic location"
authors = ["Alexandre Dulaunoy", "Daniel <daniel@hireflix.com>"]
readme = "README.md"
license = "AGPL-3.0-or-later"
repository = "https://github.com/hireflix/mmdb-server"

[tool.poetry.scripts]
serve = "mmdb_server.mmdb_server:main"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
falcon = "^3.1.1"
maxminddb = "^2.4.0"
redis = { extras = ["hiredis"], version = "4.6.0" }
async-timeout = "^4.0.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.3"
pyright = "^1.1.400"
pre-commit = "^4.2.0"
types-redis = "^4.6.0.20241004"
types-maxminddb = "^1.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Enable pycodestyle (E), pyflakes (F), isort (I), pep8-naming (N), flake8-bugbear (B)
select = ["E", "F", "I", "N", "B", "W", "C90"]
ignore = []

# Same as Black
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
include = ["mmdb_server", "scripts", "tools"]
exclude = ["**/node_modules", "**/__pycache__", "**/.venv"]
venvPath = "."
venv = ".venv"

# Type checking strictness
typeCheckingMode = "strict"    # Can be "off", "basic", or "strict"
reportMissingImports = true
reportMissingTypeStubs = false # Set to true if you want to enforce type stubs
pythonVersion = "3.10"
